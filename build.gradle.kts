plugins {
    application
    id("java")
}

group = "fr.sorway.cvewatcher"
version = ""

repositories {
    mavenCentral()
}

configurations.implementation.get().setCanBeResolved(true)

dependencies {
    //Testing
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    //Logging
    implementation("ch.qos.logback:logback-classic:1.4.8")
    implementation("ch.qos.logback:logback-core:1.4.8")

    //Discord
    implementation("net.dv8tion:JDA:5.0.0-beta.15")

    //Configuration
    implementation("io.github.cdimascio:java-dotenv:5.2.2")

    //Reflections
    implementation("org.reflections:reflections:0.10.2")

    //Database
    implementation("com.zaxxer:HikariCP:5.0.1")
    implementation("org.mariadb.jdbc:mariadb-java-client:3.1.4")

    //RSS Flux Reader
    implementation("com.apptasticsoftware:rssreader:3.5.0")
}

tasks.test {
    useJUnitPlatform()
}

tasks {
    javadoc {
        options.encoding = "UTF-8"
    }
    compileJava {
        options.encoding = "UTF-8"
    }
    compileTestJava {
        options.encoding = "UTF-8"
    }
}

tasks.register<Copy>("copyLibs") {
    from(configurations.implementation)
    into(project.rootDir.resolve("reports/libs/"))
}

tasks.withType<Jar> {
    manifest.attributes["Main-Class"] = "fr.sorway.cvewatcher.CVEWatcher"
    manifest.attributes["Class-Path"] = configurations
            .runtimeClasspath
            .get()
            .joinToString(separator = " ") { file ->
                "libs/${file.name}"
            }
}
